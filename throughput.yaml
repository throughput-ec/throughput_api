---
components:
  parameters:
    offsetQuery:
      description: Number of records to skip.
      in: query
      name: offset
      schema:
        format: int32
        minimum: 0
        type: integer
        default: 0
    limitQuery:
      description: Maximum number of records to return.
      in: query
      name: limit
      schema:
        format: int32
        maximum: 50
        minimum: 0
        default: 25
        type: integer
    keywordQuery:
      description: Pass an optional search string for looking up a data resource by registered keyword.
      in: query
      name: keyword
      schema:
        type: string
    searchQuery:
      description: Pass an optional search string for looking up a data resource through context.
      in: query
      name: search
      required: false
      schema:
        type: string
    nameQuery:
      description: Pass an optional search string for looking up a data resource by name.
      in: query
      name: name
      required: false
      schema:
        type: string
    annotationidpath:
      description: The unique identifier for a particular annotation.
      in: path
      name: annotationid
      required: true
      schema:
        type: integer
        minimum: 1
        example: 41
        maximum: 2100000
  schemas:
    status:
      type: string
    message:
      type: string
    rawannotation:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/rawannotation'
        message:
          $ref: '#/components/schemas/message'
        data:
          type: object
          properties:
            date:
              type: string
              format: date-time
            body:
              type: object
            targets:
              type: array
              items:
                type: object
                properties:
                  additionalType:
                    type: string
                  in:
                    type: object
                  name:
                    type: string
                  type:
                    type: string
                  id:
                    type: string
    annos:
      properties:
        stats:
          type: array
          items:
            properties:
              annotations:
                example: 67012
                type: integer
              week:
                example: 3
                type: integer
              year:
                example: 2019
                type: integer
            required:
              - year
              - week
              - annotations
            type: object
    ccdr:
      properties:
        description:
          example: Neotoma is a multiproxy paleoecological database that covers the Pliocene-Quaternary, including modern microfossil samples. . .
          type: string
        id:
          example: r3d100011761
          type: string
        name:
          example: Neotoma Paleoecology Database
          type: string
        repos:
          example: 13
          type: integer
        url:
          example: https://www.neotomadb.org/
          format: url
          type: string
      required:
        - id
        - name
        - description
        - url
        - repos
      type: object
    keyword:
      properties:
        keyword:
          example: climate
          type: string
        resources:
          example: 14
          type: integer
      required:
        - keyword
        - resources
      type: object
    kwcount:
      properties:
        count:
          example: 23
          type: integer
        keyword:
          example: climate
          type: string
      required:
        - keyword
        - count
      type: object
    kwreturn:
      properties:
        description:
          example: Access to Archival Databases
          type: string
        id:
          example: r3d100000002
          type: string
        keyword:
          example: us history
          type: string
        links:
          example: 5
          type: integer
        name:
          example: Access to Archival Databases
          type: string
        type:
          example: schema:DataCatalog
          type: string
      required:
        - id
        - name
        - description
        - type
        - keyword
      type: object
    repo:
      properties:
        id:
          example: ''
          type: string
        name:
          example: jupyter/repo2docker
          type: string
        url:
          example: https://github.com/jupyter/repo2docker
          format: url
          type: string
      required:
        - id
        - name
        - description
        - url
        - repos
      type: object
info:
  contact:
    email: goring@wisc.edu
    name: Simon Goring
    url: http://goring.org
  description: |
    The Throughput API serves the Throughput Annotation Database by exposing connections between research objects on the web through links between URIs and text annotations.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Throughput API
  version: 1.0.0
openapi: 3.0.0
paths:
  /anno/{annotationid}:
    get:
      description: |
        Pass in an annotation ID and return all the linked objects and elements associated with the specific annotation.
      parameters:
        - $ref: '#/components/parameters/annotationidpath'
      responses:
        '200':
          description: A set of linked objects within the Throughput database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rawannotation'
  /ccdr:
    get:
      description: |
        Passing terms in to search for keywords, subject matter or descriptions associated with data resources on the web.
      operationId: searchDb
      parameters:
        - $ref: '#/components/parameters/nameQuery'
        - $ref: '#/components/parameters/searchQuery'
        - $ref: '#/components/parameters/keywordQuery'
        - $ref: '#/components/parameters/limitQuery'
        - $ref: '#/components/parameters/offsetQuery'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ccdr'
                type: array
          description: search results matching criteria
        '400':
          description: bad input parameter
      summary: searches for a data resource ('schema:DataCatalog')
      tags:
        - databases
  /repos/keywords/:
    get:
      description: |
        For a given set of keywords (or all keywords, if keywords are not supplied), return the count of linked code repositories containing the text string.
      parameters:
        - $ref: '#/components/parameters/keywordQuery'
        - $ref: '#/components/parameters/limitQuery'
        - $ref: '#/components/parameters/offsetQuery'
      responses:
        '200':
          description: A set counts for code repositories linked to various keywords.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status'
  /ccdrs/keywords/:
    get:
      description: |
        For a given set of keywords (or all keywords, if keywords are not supplied), return the count of linked research databases containing the text string.
      parameters:
        - $ref: '#/components/parameters/keywordQuery'
        - $ref: '#/components/parameters/limitQuery'
        - $ref: '#/components/parameters/offsetQuery'
      responses:
        '200':
          description: A set of databases.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status'
  /keyword/dbs/count:
    get:
      description: Pass a comma separated list of keywords and return the count of databases associated with each.
      parameters:
        - description: A comma separated list of keywords in the database.
          in: query
          name: keyword
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/kwcount'
                type: array
          description: search results matching criteria
        '400':
          description: bad input parameter
      summary: Returns the count of databases associated with each selected keyword.
      tags:
        - databases
        - summary
        - count
        - keywords
  /keyword/repos:
    get:
      description: Given a particular identifier for a database, search for the database in Throughput and return all associated keywords.
      operationId: ccdrKey
      parameters:
        - description: A unique database identifier.
          in: path
          name: ccdr
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/keyword'
                type: array
          description: keywords matching the search criteria.
        '400':
          description: bad input parameter
      summary: Get all available keywords assigned to a particular data repository.
      tags:
        - keyword
        - repository
        - database
  /keyword/resources:
    get:
      description: |
        Pass a comma separated list of keywords and return the databases that match those keywords.
      parameters:
        - description: A comma separated list of keywords in the database.
          in: query
          name: keyword
          required: false
          schema:
            type: string
        - description: Maximum number of records to return.
          in: query
          name: limit
          schema:
            format: int32
            maximum: 50
            minimum: 0
            type: integer
        - description: Number of records to skip.
          in: query
          name: offset
          schema:
            format: int32
            minimum: 0
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/kwreturn'
                type: array
          description: search results matching criteria
        '400':
          description: bad input parameter
      summary: Pulls data resources by keywords.
      tags:
        - databases
  /keywords:
    get:
      description: Looks for a keyword and then finds all related keywords associated with databases and code repositories.
      operationId: searchRepo
      parameters:
        - description: Pass a keyword, partial keyword or comma separated string of keywords.
          in: query
          name: keyword
          required: false
          schema:
            type: string
        - description: Maximum number of records to return.
          in: query
          name: limit
          schema:
            default: 15
            format: int32
            maximum: 50
            minimum: 0
            type: integer
        - description: Number of records to skip.
          in: query
          name: offset
          schema:
            default: 0
            format: int32
            minimum: 0
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/keyword'
                type: array
          description: keywords matching the search criteria.
        '400':
          description: bad input parameter
      summary: Returns a list of all keywords in Throughput.
      tags:
        - keywords
  /metrics/annos:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/annos'
                type: array
          description: Summary of weekly uploads/updates.
        '400':
          description: bad input parameter
      summary: Return summary information about the number of annotations generated by week over the last 10 weeks.
      tags:
        - stats
  /repo:
    get:
      description: |
        Passing terms in to search for keywords, subject matter or descriptions associated with code resources on the web.
      operationId: searchRepo
      parameters:
        - description: Pass an optional search string for looking up a code resource by name.
          in: query
          name: name
          required: false
          schema:
            type: string
        - description: Pass an optional search string for looking up a code resource through context.
          in: query
          name: search
          required: false
          schema:
            type: string
        - description: Pass an optional search string for looking up a code resource by registered keyword.
          in: query
          name: keyword
          schema:
            type: string
        - description: Maximum number of records to return.
          in: query
          name: limit
          schema:
            format: int32
            maximum: 50
            minimum: 0
            type: integer
        - description: Number of records to skip.
          in: query
          name: offset
          schema:
            format: int32
            minimum: 0
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/repo'
                type: array
          description: search results matching criteria
        '400':
          description: bad input parameter
      summary: searches for a data resource ('schema:CodeRepository')
      tags:
        - databases
servers:
  - description: Throughput Database API
    url: https://throughputdb.com/api
  - description: Local Development API
    url: http://localhost:3000/api
tags:
  - description: Calls to return information about databases.
    name: Research Databases
  - description: Calls to return information about code repositories.
    name: Code Repositories
  - description: Throughput database statistics.
    name: Statistics